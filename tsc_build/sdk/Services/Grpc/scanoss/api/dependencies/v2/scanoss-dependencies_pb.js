// source: scanoss/api/dependencies/v2/scanoss-dependencies.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();
var scanoss_api_common_v2_scanoss$common_pb = require('../../../../scanoss/api/common/v2/scanoss-common_pb.js');
goog.object.extend(proto, scanoss_api_common_v2_scanoss$common_pb);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyRequest', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyRequest.Files', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyRequest.Purls', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyResponse', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyResponse.Files', null, global);
goog.exportSymbol('proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.scanoss.api.dependencies.v2.DependencyRequest.repeatedFields_, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.displayName = 'proto.scanoss.api.dependencies.v2.DependencyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyRequest.Purls, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.displayName = 'proto.scanoss.api.dependencies.v2.DependencyRequest.Purls';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.scanoss.api.dependencies.v2.DependencyRequest.Files.repeatedFields_, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyRequest.Files, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Files.displayName = 'proto.scanoss.api.dependencies.v2.DependencyRequest.Files';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.scanoss.api.dependencies.v2.DependencyResponse.repeatedFields_, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.displayName = 'proto.scanoss.api.dependencies.v2.DependencyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.displayName = 'proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.repeatedFields_, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.displayName = 'proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.scanoss.api.dependencies.v2.DependencyResponse.Files.repeatedFields_, null);
};
goog.inherits(proto.scanoss.api.dependencies.v2.DependencyResponse.Files, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Files.displayName = 'proto.scanoss.api.dependencies.v2.DependencyResponse.Files';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            filesList: jspb.Message.toObjectList(msg.getFilesList(), proto.scanoss.api.dependencies.v2.DependencyRequest.Files.toObject, includeInstance),
            depth: jspb.Message.getFieldWithDefault(msg, 2, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyRequest;
    return proto.scanoss.api.dependencies.v2.DependencyRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.scanoss.api.dependencies.v2.DependencyRequest.Files;
                reader.readMessage(value, proto.scanoss.api.dependencies.v2.DependencyRequest.Files.deserializeBinaryFromReader);
                msg.addFiles(value);
                break;
            case 2:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setDepth(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFilesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.scanoss.api.dependencies.v2.DependencyRequest.Files.serializeBinaryToWriter);
    }
    f = message.getDepth();
    if (f !== 0) {
        writer.writeInt32(2, f);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.toObject = function (includeInstance, msg) {
        var f, obj = {
            purl: jspb.Message.getFieldWithDefault(msg, 1, ""),
            requirement: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyRequest.Purls;
    return proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setPurl(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRequirement(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPurl();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getRequirement();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional string purl = 1;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.getPurl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.setPurl = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string requirement = 2;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.getRequirement = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.prototype.setRequirement = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.repeatedFields_ = [2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyRequest.Files.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyRequest.Files.toObject = function (includeInstance, msg) {
        var f, obj = {
            file: jspb.Message.getFieldWithDefault(msg, 1, ""),
            purlsList: jspb.Message.toObjectList(msg.getPurlsList(), proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyRequest.Files;
    return proto.scanoss.api.dependencies.v2.DependencyRequest.Files.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFile(value);
                break;
            case 2:
                var value = new proto.scanoss.api.dependencies.v2.DependencyRequest.Purls;
                reader.readMessage(value, proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.deserializeBinaryFromReader);
                msg.addPurls(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyRequest.Files.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFile();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getPurlsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.scanoss.api.dependencies.v2.DependencyRequest.Purls.serializeBinaryToWriter);
    }
};
/**
 * optional string file = 1;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.getFile = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.setFile = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * repeated Purls purls = 2;
 * @return {!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls>}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.getPurlsList = function () {
    return /** @type{!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls>} */ (jspb.Message.getRepeatedWrapperField(this, proto.scanoss.api.dependencies.v2.DependencyRequest.Purls, 2));
};
/**
 * @param {!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls>} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.setPurlsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Purls}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.addPurls = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.scanoss.api.dependencies.v2.DependencyRequest.Purls, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.Files.prototype.clearPurlsList = function () {
    return this.setPurlsList([]);
};
/**
 * repeated Files files = 1;
 * @return {!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Files>}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.getFilesList = function () {
    return /** @type{!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Files>} */ (jspb.Message.getRepeatedWrapperField(this, proto.scanoss.api.dependencies.v2.DependencyRequest.Files, 1));
};
/**
 * @param {!Array<!proto.scanoss.api.dependencies.v2.DependencyRequest.Files>} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.setFilesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.addFiles = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.scanoss.api.dependencies.v2.DependencyRequest.Files, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.clearFilesList = function () {
    return this.setFilesList([]);
};
/**
 * optional int32 depth = 2;
 * @return {number}
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.getDepth = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};
/**
 * @param {number} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyRequest} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyRequest.prototype.setDepth = function (value) {
    return jspb.Message.setProto3IntField(this, 2, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            filesList: jspb.Message.toObjectList(msg.getFilesList(), proto.scanoss.api.dependencies.v2.DependencyResponse.Files.toObject, includeInstance),
            status: (f = msg.getStatus()) && scanoss_api_common_v2_scanoss$common_pb.StatusResponse.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyResponse;
    return proto.scanoss.api.dependencies.v2.DependencyResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.scanoss.api.dependencies.v2.DependencyResponse.Files;
                reader.readMessage(value, proto.scanoss.api.dependencies.v2.DependencyResponse.Files.deserializeBinaryFromReader);
                msg.addFiles(value);
                break;
            case 2:
                var value = new scanoss_api_common_v2_scanoss$common_pb.StatusResponse;
                reader.readMessage(value, scanoss_api_common_v2_scanoss$common_pb.StatusResponse.deserializeBinaryFromReader);
                msg.setStatus(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFilesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.scanoss.api.dependencies.v2.DependencyResponse.Files.serializeBinaryToWriter);
    }
    f = message.getStatus();
    if (f != null) {
        writer.writeMessage(2, f, scanoss_api_common_v2_scanoss$common_pb.StatusResponse.serializeBinaryToWriter);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.toObject = function (includeInstance, msg) {
        var f, obj = {
            name: jspb.Message.getFieldWithDefault(msg, 1, ""),
            spdxId: jspb.Message.getFieldWithDefault(msg, 2, ""),
            isSpdxApproved: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
            url: jspb.Message.getFieldWithDefault(msg, 4, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses;
    return proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setName(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSpdxId(value);
                break;
            case 3:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setIsSpdxApproved(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getName();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSpdxId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getIsSpdxApproved();
    if (f) {
        writer.writeBool(3, f);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
};
/**
 * optional string name = 1;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.getName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.setName = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string spdx_id = 2;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.getSpdxId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.setSpdxId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional bool is_spdx_approved = 3;
 * @return {boolean}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.getIsSpdxApproved = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};
/**
 * @param {boolean} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.setIsSpdxApproved = function (value) {
    return jspb.Message.setProto3BooleanField(this, 3, value);
};
/**
 * optional string url = 4;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.toObject = function (includeInstance, msg) {
        var f, obj = {
            component: jspb.Message.getFieldWithDefault(msg, 1, ""),
            purl: jspb.Message.getFieldWithDefault(msg, 2, ""),
            version: jspb.Message.getFieldWithDefault(msg, 3, ""),
            licensesList: jspb.Message.toObjectList(msg.getLicensesList(), proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.toObject, includeInstance),
            url: jspb.Message.getFieldWithDefault(msg, 5, ""),
            comment: jspb.Message.getFieldWithDefault(msg, 6, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies;
    return proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setComponent(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setPurl(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setVersion(value);
                break;
            case 4:
                var value = new proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses;
                reader.readMessage(value, proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.deserializeBinaryFromReader);
                msg.addLicenses(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setUrl(value);
                break;
            case 6:
                var value = /** @type {string} */ (reader.readString());
                msg.setComment(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getComponent();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getPurl();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getVersion();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getLicensesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses.serializeBinaryToWriter);
    }
    f = message.getUrl();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getComment();
    if (f.length > 0) {
        writer.writeString(6, f);
    }
};
/**
 * optional string component = 1;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getComponent = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setComponent = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string purl = 2;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getPurl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setPurl = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string version = 3;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getVersion = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setVersion = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated Licenses licenses = 4;
 * @return {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses>}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getLicensesList = function () {
    return /** @type{!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses>} */ (jspb.Message.getRepeatedWrapperField(this, proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses, 4));
};
/**
 * @param {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses>} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setLicensesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.addLicenses = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.scanoss.api.dependencies.v2.DependencyResponse.Licenses, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.clearLicensesList = function () {
    return this.setLicensesList([]);
};
/**
 * optional string url = 5;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getUrl = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setUrl = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional string comment = 6;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.getComment = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.prototype.setComment = function (value) {
    return jspb.Message.setProto3StringField(this, 6, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.repeatedFields_ = [4];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.toObject = function (opt_includeInstance) {
        return proto.scanoss.api.dependencies.v2.DependencyResponse.Files.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.scanoss.api.dependencies.v2.DependencyResponse.Files.toObject = function (includeInstance, msg) {
        var f, obj = {
            file: jspb.Message.getFieldWithDefault(msg, 1, ""),
            id: jspb.Message.getFieldWithDefault(msg, 2, ""),
            status: jspb.Message.getFieldWithDefault(msg, 3, ""),
            dependenciesList: jspb.Message.toObjectList(msg.getDependenciesList(), proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.toObject, includeInstance)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.scanoss.api.dependencies.v2.DependencyResponse.Files;
    return proto.scanoss.api.dependencies.v2.DependencyResponse.Files.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setFile(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setId(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setStatus(value);
                break;
            case 4:
                var value = new proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies;
                reader.readMessage(value, proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.deserializeBinaryFromReader);
                msg.addDependencies(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.scanoss.api.dependencies.v2.DependencyResponse.Files.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFile();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getId();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getStatus();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getDependenciesList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(4, f, proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies.serializeBinaryToWriter);
    }
};
/**
 * optional string file = 1;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.getFile = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.setFile = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string id = 2;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.getId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.setId = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string status = 3;
 * @return {string}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.getStatus = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.setStatus = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * repeated Dependencies dependencies = 4;
 * @return {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies>}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.getDependenciesList = function () {
    return /** @type{!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies>} */ (jspb.Message.getRepeatedWrapperField(this, proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies, 4));
};
/**
 * @param {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies>} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.setDependenciesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 4, value);
};
/**
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.addDependencies = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.scanoss.api.dependencies.v2.DependencyResponse.Dependencies, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.Files.prototype.clearDependenciesList = function () {
    return this.setDependenciesList([]);
};
/**
 * repeated Files files = 1;
 * @return {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Files>}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.getFilesList = function () {
    return /** @type{!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Files>} */ (jspb.Message.getRepeatedWrapperField(this, proto.scanoss.api.dependencies.v2.DependencyResponse.Files, 1));
};
/**
 * @param {!Array<!proto.scanoss.api.dependencies.v2.DependencyResponse.Files>} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.setFilesList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files=} opt_value
 * @param {number=} opt_index
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse.Files}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.addFiles = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.scanoss.api.dependencies.v2.DependencyResponse.Files, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.clearFilesList = function () {
    return this.setFilesList([]);
};
/**
 * optional scanoss.api.common.v2.StatusResponse status = 2;
 * @return {?proto.scanoss.api.common.v2.StatusResponse}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.getStatus = function () {
    return /** @type{?proto.scanoss.api.common.v2.StatusResponse} */ (jspb.Message.getWrapperField(this, scanoss_api_common_v2_scanoss$common_pb.StatusResponse, 2));
};
/**
 * @param {?proto.scanoss.api.common.v2.StatusResponse|undefined} value
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse} returns this
*/
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.setStatus = function (value) {
    return jspb.Message.setWrapperField(this, 2, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.scanoss.api.dependencies.v2.DependencyResponse} returns this
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.clearStatus = function () {
    return this.setStatus(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.scanoss.api.dependencies.v2.DependencyResponse.prototype.hasStatus = function () {
    return jspb.Message.getField(this, 2) != null;
};
goog.object.extend(exports, proto.scanoss.api.dependencies.v2);
//# sourceMappingURL=data:application/json;base64,