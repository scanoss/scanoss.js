//=============================================================================
// Uses: Implementation of CRC-8/MAXIM-DOW,CRC-8/MAXIM,DOW-CRC.
// Notes:
// JS ported from Auto-generated by http://crc.drque.net/
//=============================================================================

//Table size
const CRC8_MAXIM_DOW_TABLE_SIZE = 0x100
const CRC8_MAXIM_DOW_POLYNOMIAL = 0x8C // 0x31 reflected
const CRC8_MAXIM_DOW_INITIAL = 0x00 // 0x00 reflected
const CRC8_MAXIM_DOW_FINAL = 0x00 // 0x00 reflected

let crc8_MAXIM_DOW_Table = []


//-----------------------------------------------------------------------------
// Uses:
//   Compute CRC of buffer without lookup tables.
// Input:
//   crc - Current CRC or initial value (i.e. 'CRC8_MAXIM_DOW_INITIAL').
//   byte - New byte to accumulate.
// Output:
//   Updated CRC.
//-----------------------------------------------------------------------------
function crc8_MAXIM_DOW_ByteNoTable(crc, byte) {
  crc ^= byte;
  for (let count = 0; count<8; count++) {
    const isSet = (crc & 0x01)
    crc >>= 1;
    if (isSet) crc ^= CRC8_MAXIM_DOW_POLYNOMIAL
  }
  return crc
}

//-----------------------------------------------------------------------------
// Uses:
//   Create the lookup table.
// Returns:
//   True if there was an error, false if not.
// Note:
//   Must be called before any table based CRC calculations can be done.
//-----------------------------------------------------------------------------
function crc8_MAXIM_DOW_GenerateTable() {
  for(let i = 0; i<CRC8_MAXIM_DOW_TABLE_SIZE; i++) {
    crc8_MAXIM_DOW_Table.push(crc8_MAXIM_DOW_ByteNoTable(0, i))
  }
}



//-----------------------------------------------------------------------------
// Uses:
//   Update CRC by byte.
// Input:
//   crc - Initial CRC.
//   byte - New byte to accumulate.
// Output:
//   Updated CRC.
//-----------------------------------------------------------------------------
function crc8_MAXIM_DOW_Byte( crc, byte )
{
  const index = byte ^ crc;
  return crc8_MAXIM_DOW_Table[ index ] ^ ( crc >> 8 );
}

//-----------------------------------------------------------------------------
// Uses:
//   Compute CRC of buffer.
// Input:
//   crc - Current CRC or initial value (i.e. 'CRC8_MAXIM_DOW_INITIAL').
//   buffer - Pointer to bytes to add to CRC.
//   bufferSize - Number of bytes in 'buffer'.
// Output:
//   Updated CRC.
//-----------------------------------------------------------------------------
function crc8_MAXIM_DOW_Buffer(buffer) {
  let crc = CRC8_MAXIM_DOW_INITIAL;
  for (let index = 0; index < buffer.length ; index ++) {
    crc = crc8_MAXIM_DOW_Byte(crc, buffer[index])
  }
  crc ^= CRC8_MAXIM_DOW_FINAL;
  return crc;
}

test = () => {
  crc8_MAXIM_DOW_GenerateTable()
  let crc = crc8_MAXIM_DOW_Buffer(Buffer.from("HOLA ESTO ES UNA PRUEBA"))

  console.log(crc.toString(16))
}

module.exports = {
  crc8_MAXIM_DOW_GenerateTable,
  crc8_MAXIM_DOW_Buffer
}
